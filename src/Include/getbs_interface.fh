************************************************************************
* This file is part of OpenMolcas.                                     *
*                                                                      *
* OpenMolcas is free software; you can redistribute it and/or modify   *
* it under the terms of the GNU Lesser General Public License, v. 2.1. *
* OpenMolcas is distributed in the hope that it will be useful, but it *
* is provided "as is" and without any express or implied warranties.   *
* For more details see the full text of the license in the file        *
* LICENSE or in <http://www.gnu.org/licenses/>.                        *
*                                                                      *
* Copyright (C) 2020, Roland Lindh                                     *
************************************************************************
      Interface
      SubRoutine GetBS(DDname,BSLbl,iBSLbl,
     &                 lAng,ipExp,ipCff,ipCff_Cntrct,ipCff_Prim,
     &                 ipFockOp,
     &                 nExp,nBasis,nBasis_Cntrct,MxShll,iShll,
     &                 MxAng, Charge,iAtmNr,BLine,Ref,
     &                 PAM2,ipPAM2xp,ipPAM2cf,nPAM2,FockOp,
     &                 ECP,NoPairL,SODK,ipM1xp,ipM1cf,nM1,ipM2xp,
     &                 ipM2cf,nM2,
     &                 ipBk,CrRep,nProj,nAIMP,ipAkl,ip_Occ,iOpt,
     &                 UnNorm,nDel, nVal,  nPrj,  nSRO,  nSOC, nPP,
     &                 ipVal_,ipPrj_,ipSRO_,ipSOC_,ipPP_,LuRd,
     &                 BasisTypes,AuxCnttp,
     &                 nFragType,nFragCoor,nFragEner,nFragDens,
     &                 ipFragType,ipFragCoor,ipFragEner,ipFragCoef,IsMM,
     &                 STDINP,iSTDINP,L_STDINP,Expert,ExtBasDir,
     &                 DInf,nDInf)
#include "Molcas.fh"
      Character*(*) DDname
      Character*80  BSLbl
      Integer       iBSLbl, lAng
      Integer       ipExp(MxShll), ipCff(MxShll), ipCff_Cntrct(MxShll),
     &              ipCff_Prim(MxShll), ipFockOp(MxShll),
     &              nExp(MxShll), nBasis(MxShll),nBasis_Cntrct(MxShll),
     &              MxShll,iShll,MxAng
      Real*8        Charge
      Integer       iAtmNr
      Character*80  BLine, Ref(2)
      Logical       PAM2
      Integer       ipPAM2xp,ipPAM2cf,nPAM2
      Logical       FockOp, ECP, NoPairL, SODK
      Integer       ipM1xp,ipM1cf,nM1,ipM2xp,ipM2cf,nM2
      Integer       ipBk(MxShll)
      Real*8        CrRep
      Integer       nProj, nAIMP, ipAkl(MxShll),ip_Occ(MxShll), iOpt
      Logical       UnNorm
      Integer       nDel(0:MxAng), nVal,  nPrj,  nSRO,  nSOC, nPP,
     &              ipVal_,ipPrj_,ipSRO_,ipSOC_,ipPP_,LuRd,
     &              BasisTypes(4)
      Logical       AuxCnttp
      Integer       nFragType,nFragCoor,nFragEner,nFragDens,
     &              ipFragType,ipFragCoor,ipFragEner,ipFragCoef,IsMM
      Character*180 STDINP(MxAtom*2)
      Logical L_STDINP, Expert
      Character *(*) ExtBasDir
      Real*8 DInf(nDInf)
      End SubRoutine GetBS
      End Interface
