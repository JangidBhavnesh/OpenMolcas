************************************************************************
* This file is part of OpenMolcas.                                     *
*                                                                      *
* OpenMolcas is free software; you can redistribute it and/or modify   *
* it under the terms of the GNU Lesser General Public License, v. 2.1. *
* OpenMolcas is distributed in the hope that it will be useful, but it *
* is provided "as is" and without any express or implied warranties.   *
* For more details see the full text of the license in the file        *
* LICENSE or in <http://www.gnu.org/licenses/>.                        *
*                                                                      *
* Copyright (C) 1990, Markus P. Fuelscher                              *
*               1990, Jeppe Olsen                                      *
************************************************************************
!#define _DEBUGPRINT_
      SUBROUTINE REORD(SGS,CIS,EXS,NCONF,IMODE,ICONF,ISPIN,kSym,CIOLD)
C
C     AUTHOR:  M.P. FUELSCHER AND J. OLSEN
C              UNIV. OF LUND, SWEDEN 1990
C
C     PURPOSE: CONSTRUCT THE REINDEXING ARRAY WHICH REORDERS
C              THE CSFS GENERATED BY THE DETERMINANT CODE INTO
C              THE SPLIT GRAPH GUGA ORDER.
C              FOR THAT CONSTRUCT FOR EACH CSF THE CORRESPONDING
C              STEP VECTOR AND PASS IT TO THE FUNCTIONS IPHASE
C              AND ISGNUM WHICH COMPUTES THE THE PHASE FACTOR
C              INVOLVED WHEN GOING FROM THE SYMMETRIC TO THE
C              UNITARY GROUP AND THE SPLIT ORDERING NUMBER.
C              FINALLY, THE VECTORS OF CI COEFFICIENTS ARE
C              REORDERED AND, TWO MODE ARE POSSIBLE:
C              IMODE=0 : FROM SYMMETRIC GROUP TO SPLIT GRAPH UGA ORDER
C              IMODE=1 : FROM SPLIT GRAPH UGA TO SYMMETRIC GROUP ORDER
C
C
#ifdef _DEBUGPRINT_
      use Definitions, only: u6
#endif
      use spinfo_mclr_data, only: minop, NCSFTP=>NCPCNT, NCNFTP=>NCNATS,
     &                            NTYP
      use stdalloc, only: mma_allocate, mma_deallocate
      use struct, only: SGStruct, CIStruct, EXStruct
      IMPLICIT REAL*8 (A-H,O-Z)
      Type(SGStruct) SGS
      Type(CIStruct) CIS
      Type(EXStruct) EXS
      Integer kSym
      Integer ICONF(*),ISPIN(*)
      Real*8 CIOLD(NCONF)
C
      Real*8, Allocatable:: CINEW(:)
      Integer IWALK(50)
      Integer, External:: IPHASE

      Call mma_allocate(CINEW,NCONF,Label='CINEW')

      Associate (nLev=> SGS%nLev, IDRT=>SGS%DRT, IDOWN=>SGS%Down ,
     &           IDAW=>SGS%DAW, IUP=>SGS%Up, IRAW=>SGS%RAW,
     &           IUSGN=>EXS%USGN, ILSGN=>EXS%LSGN, nVert=>SGS%nVert,
     &           MidLev=>SGS%MidLev, MVSta=>SGS%MVSta,
     &           nMidV=>CIS%nMidV, MXUP=>SGS%MxUp, MXDWN=>SGS%MxDwn,
     &           nEl=>SGS%nActEl, NORB=>SGS%nLev)
C
C     LOOP OVER CONFIGURATIONS TYPES
C
      ICSFJP = 0
      ICNBS0 = 0 ! dummy initialize
      IPBAS  = 0 ! dummy initialize
      DO 1000 ITYP = 1, NTYP
        IOPEN = ITYP + MINOP - 1 ! MINOP IS NOT INITIALIZED TEOEAW
        ICL = (NEL - IOPEN) / 2
C       BASE ADRESS FOR CONFIGURATION OF THIS TYPE
        IF( ITYP .EQ. 1 ) THEN
          ICNBS0 = 1
        ELSE
          ICNBS0 = ICNBS0 + NCNFTP(ITYP-1,kSym)*(NEL+IOPEN-1)/2
        END IF
C      BASE ADRESS FOR PROTOTYPE SPIN COUPLINGS
        IF( ITYP .EQ. 1 ) THEN
          IPBAS = 1
        ELSE
          IPBAS = IPBAS + NCSFTP(ITYP-1)*(IOPEN-1)
        END IF
C
C     LOOP OVER NUMBER OF CONFIGURATIONS OF TYPE ITYP AND PROTOTYPE
C     SPIN COUPLINGS
C
        DO 900  IC = 1, NCNFTP(ITYP,kSym)
          ICNBS = ICNBS0 + (IC-1)*(IOPEN+ICL)
          DO 800 IICSF = 1,NCSFTP(ITYP)
            ICSFJP = ICSFJP + 1
            ICSBAS = IPBAS + (IICSF-1)*IOPEN
C     COMPUTE STEP VECTOR
            CALL STEPVEC(ICONF(ICNBS),ICONF(ICNBS+ICL),ICL,IOPEN,
     &                   ISPIN(ICSBAS),NORB,IWALK)
C     GET SPLIT GRAPH ORDERING NUMBER
C     FUNCTION ISGNUM
            ISG=ISGNUM(NLEV,NVERT,MIDLEV,MVSta,NMIDV,MXUP,
     &                 MXDWN,IDOWN,IUP,IDAW,IRAW,IUSGN,ILSGN,IWALK)
C     GET PHASE PHASE FACTOR
            IP=IPHASE(NLEV,NVERT,IDRT,IUP,IWALK)
C     NOW REORDER THIS ELEMENT OF THE CI-VECTOR
            PHASE=DBLE(IP)
            Select Case (iMode)
              Case (0)
               CINEW(ISG)=CIOLD(ICSFJP)*PHASE
              Case(1)
               CINEW(ICSFJP)=CIOLD(ISG)*PHASE
            End Select
800       CONTINUE
900     CONTINUE
1000  CONTINUE
C
#ifdef _DEBUGPRINT_
      LPRINT=NCONF
      WRITE(u6,*)
      WRITE(u6,*)' OLD CI-VECTORS IN SUBROUTINE REORD'
      WRITE(u6,'(10F12.8)') (CIOLD(I),I=1,LPRINT)
      WRITE(u6,*)' NEW CI-VECTORS IN SUBROUTINE REORD'
      WRITE(u6,'(10F12.8)') (CINEW(I),I=1,LPRINT)
      WRITE(u6,*)
#endif
C
      End Associate
      CIOLD(:)=CINEW(:)
      Call mma_deallocate(CINEW)

      END SUBROUTINE REORD
